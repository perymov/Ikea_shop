
//================== Две главных функции для отправки и получения данных ===============================

// для объявления асинохронных функций подходит любой метод задания функции:
// асинхронная функция ВСЕГДА возвращает promise!!!
/*
async function getData() { - простое объявление функции, async пишется перед словом function
	внутри данные у всех функций одинаковые
}

const getDB = async function () { - присвоение в переменную функции, async пишется перед словом function
	внутри данные у всех функций одинаковые
};
*/

//========================== Получаем данные с сервер ==================================================

const getResourse = async (url) => { // присвоение в переменную стрелочной функция, async пишется перед скобками
	// чтобы объявить асинхронную функцию нужно перед непосредственно объявлением написать ключевое слово async
	// внутри данные у всех функций одинаковые
	// для получения данных использовать будем метод fetch. Если полсе url никаких других аргументов не указывать 
	// то это классический get запрос, который просто получает данные с указанного url

	const response = await fetch(url); // создаем переменную которой присваиваем ответ от сервера
	// ключевое слово await значит что не только код который ниже ниже не выполнится, но даже присвоение в переменную 
	// не произойдет пока не выполнится fetch
	if (!response.ok) { // проверяем что ответ от сервера false
		// если так, то используем инструкцию исключения throw
		// создаем новую ошибку и добавляем описание:
		throw new Error(`Ошибка по адресу ${url}, статус ошибки ${response.status}`);
	}

	return await response.json(); // иначе возвращаем ответ в формате json и с помощью встроенного в fetch 
	// метода json() переводим данные в формат JS
};

// вызываем нашу функцию и обрабатывем ее с помощью методов then, catch и т.д. 
// getResourse('database/dataBase.json').then((data) => {  используем нашу базу данных в качестве url
//console.log(data);  и выведем в консоль ответ из этой базы
// });

//=====================================================================================================

//========================== Отправляем данные на сервер ==============================================

// создаем переменную и присваиваем в нее асихронную функцию похожую на ту что писали выше,
// но помимо url добавляем в нее данные которые будем отсылать
const sendData = async (url, data) => {
	const response = await fetch(url, { // создаем переменную, чтобы знать что состояние наших данных
		method: 'POST',
		body: data // - универсальная запись(если не знаем в каком формате будем отправлять данные)
		//body: JSON.stringify(data) - если данные отправляются в формате JSON
	});
	if (!response.ok) { // - проводим ту же проверку что и при получении данных
		throw new Error(`Ошибка по адресу ${url}, статус ошибки ${response.status}`);
	}

	return await response.json(); // и так же как и при получении данных возвращаем ответ в формате json и с помощью 
	// встроенного в fetch метода json() переводим данные в формат JS
};